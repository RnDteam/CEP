import blur.model.Transaction;
import com.ibm.ia.engine.runtime.PartialMoment;
import com.ibm.rules.engine.ruledef.runtime.Rule;
import com.ibm.rules.engine.runtime.RunningEngineWithWorkingMemory;
import ilog.rules.brl.Date;
import java.lang.Double;
import java.lang.Object;
public signature EngineDataClass extends com.ibm.rules.engine.runtime.impl.AbstractEngineData {
  public in out com.ibm.ia.model.Entity entity = null;
  public in java.time.ZonedDateTime now = null;
  public in java.lang.String partitionIndex = null;
}

ruleset IlrContext (EngineDataClass){
  
  query `Average Transaction Amount Per Day` {
    packageExecutionName = ""
    ruleExecutionName = "Average_Transaction_Amount_Per_Day"
    localQueryResult:aggregate {
      collect_class_1 : Transaction(((Date)collect_class_1.date).during(Date.lastPeriod(new com.ibm.ia.CalendarDuration(0, 0, 0, 1, 0, 0, 0))));
    }
    do {
      PartialMoment(partitionIndex){Double.valueOf(((double)collect_class_1.amount)).doubleValue()};
    }
  }
  
  query globalQuery {
    packageExecutionName = ""
    ruleExecutionName = "globalQuery"
    globalQueryResult:aggregate {
      partialMoment : PartialMoment();
    }
    do {
      PartialMoment(null){partialMoment.getNumber(), partialMoment.getSum()};
    }
  }
}
